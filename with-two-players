import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;

public class TicTacToe {
	static ArrayList<Integer>player1Position=new ArrayList<>();
	static ArrayList<Integer>player2Position=new ArrayList<>();
	private static int i;

	public static void main(String[] args) {
		char[] [] gameBoard= {{' ','|',' ','|',' '},
				              {'-','+','-','+','-'},
				              {' ','|',' ','|',' '},
				              {'-','+','-','+','-'},
				              {' ','|',' ','|',' '}};
		
	   	printGameBoard(gameBoard);
		Scanner scanner=new Scanner(System.in);
		for(int j=0;j<=0;){
		System.out.println( "Player1, enter your position from 1-9");
		int player1Pos =scanner.nextInt();
		while(player1Position.contains(player1Pos)||player2Position.contains(player1Pos)) {
			System.out.println("Position is already aquired! enter different position");
			player1Pos=scanner.nextInt();
		}
		System.out.println("Your position is "+player1Pos);
		gameBoard=placePosition(gameBoard, player1Pos,"Player1");
		
		System.out.println("Player2, enter your position from 1-9");
		int player2Pos=scanner.nextInt();
		while(player1Position.contains(player2Pos)||player2Position.contains(player2Pos)) {
			System.out.println("Position is already aquired! enter different position");
			player2Pos=scanner.nextInt();
		}
		System.out.println("Your position is "+player2Pos);
		gameBoard=placePosition(gameBoard, player2Pos,"Player2");
		
		String winner=checkWinner();
		System.out.print(winner);
		if(i==1) {
			j=i;
		}
		} 
		
		scanner.close();
	}
/*--------------------------------------------------------------------------------------------------------------------------------------*/
	
	private static char[][] placePosition(char[][] gameBoard, int position,String user) {
		char symbol = 0;
		if(user.equals("Player1") ) {
			 symbol='X';
			 player1Position.add(position);
		}if(user.equals("Player2")) {
			symbol='O';
			player2Position.add(position);
		}
		switch(position){
		case 1: gameBoard[0][0]=symbol;break;
		case 2: gameBoard[0][2]=symbol;break;
		case 3: gameBoard[0][4]=symbol;break;
		case 4: gameBoard[2][0]=symbol;break;
		case 5: gameBoard[2][2]=symbol;break;
		case 6: gameBoard[2][4]=symbol;break;
		case 7: gameBoard[4][0]=symbol;break;
		case 8: gameBoard[4][2]=symbol;break;
		case 9: gameBoard[4][4]=symbol;break;
		} 	   	printGameBoard(gameBoard);
		return gameBoard;
	}
		private static void printGameBoard(char[][] gameBoard) {
			for(char[] row:gameBoard) {
				for(char c:row) {
					System.out.print(c);
				}
				System.out.println();
			}
	}
		public static String checkWinner() {
			List topRow=Arrays.asList(1, 2, 3);
			List middleRow=Arrays.asList(4, 5, 6);
			List bottomRow=Arrays.asList(7, 8, 9);
			List Col1=Arrays.asList(1, 4, 7);
			List Col2=Arrays.asList(2, 5, 8);
			List Col3=Arrays.asList(3, 6, 9);
			List diag1=Arrays.asList(1, 5, 9);
			List diag2=Arrays.asList(7, 5, 3);
			
			List<List>winning=new ArrayList<>();
			winning.add(topRow);
			winning.add(middleRow);
		    winning.add(bottomRow);
			winning.add(Col1);
			winning.add(Col2);
			winning.add(Col3);
			winning.add(diag1);
			winning.add(diag2);
			
			for(List list: winning) {
				if(player1Position.containsAll(list)) { 
					i=1;
					return "Player1 has won!!!";
				}else if(player2Position.containsAll(list)) {
					i=1;
					return "Player2 has won!!!";
				}else if(player1Position.size()+player2Position.size()==9){
					i=1;
					return"Draw!!!";
				} else {
					return"";
				}
			}
			return null;
		}
}
